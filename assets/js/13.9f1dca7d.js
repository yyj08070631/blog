(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{272:function(t,e,s){"use strict";s.r(e);var a=s(28),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_001-关于-javascript-this-指向"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_001-关于-javascript-this-指向"}},[t._v("#")]),t._v(" 001 关于 JavaScript this 指向")]),t._v(" "),s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),s("p",[t._v("这篇文章的灵感来源于冴羽大佬的"),s("a",{attrs:{href:"https://github.com/mqyqingfeng/Blog/issues/7",target:"_blank",rel:"noopener noreferrer"}},[t._v("《JavaScript深入之从ECMAScript规范解读this》"),s("OutboundLink")],1),t._v("一文，这篇文章从 ES5 规范的角度解释了 "),s("code",[t._v("this")]),t._v(" 指向的原理，下面的解析是从我的理解出发，重新梳理一下整个规则。")]),t._v(" "),s("blockquote",[s("p",[t._v("更详细具体的解释，可以阅读 ES5 文档："),s("br"),t._v("\n英文版: "),s("a",{attrs:{href:"http://es5.github.io",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://es5.github.io"),s("OutboundLink")],1),s("br"),t._v("\n中文版: "),s("a",{attrs:{href:"http://yanhaijing.com/es5",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://yanhaijing.com/es5"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),s("h3",{attrs:{id:"reference"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reference"}},[t._v("#")]),t._v(" Reference")]),t._v(" "),s("p",[t._v("可以理解为对对象属性的解析。它属于一种仅存在于文档中的概念模型，仅用于帮助理解 ES 的底层实现，在实际 JS 代码中并不存在。")]),t._v(" "),s("p",[t._v("翻译文档中的描述 (8.7)：一个 "),s("code",[t._v("Reference")]),t._v(" 由三部分组成，"),s("code",[t._v("base value")]),t._v(", "),s("code",[t._v("referenced name")]),t._v(" 以及 "),s("code",[t._v("strict reference")]),t._v("，本规范使用以下的抽象操作访问 "),s("code",[t._v("Reference")]),t._v(" 的组成部分，（此处只列举本文中用到的操作名）"),s("code",[t._v("GetBase")]),t._v(", "),s("code",[t._v("IsPropertyReference")]),t._v(", "),s("code",[t._v("GetValue")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"base-value"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#base-value"}},[t._v("#")]),t._v(" base value")]),t._v(" "),s("p",[t._v("可以理解为属性名所在的上下文，如果是对象的属性，那么 "),s("code",[t._v("base value")]),t._v(" 就是这个对象；如果是一个变量，那么 "),s("code",[t._v("base value")]),t._v(" 就是变量所处的环境，变量环境在文档中有一个类型叫做 "),s("code",[t._v("Environment Record")]),t._v("；如果引用了一个无法触达的属性，"),s("code",[t._v("base value")]),t._v(" 就会是 "),s("code",[t._v("undefined")]),t._v("。")]),t._v(" "),s("p",[t._v("翻译文档中的描述 (8.7)："),s("code",[t._v("base value")]),t._v(" 的类型可以是 "),s("code",[t._v("undefined")]),t._v(", "),s("code",[t._v("Object")]),t._v(", "),s("code",[t._v("Boolean")]),t._v(", "),s("code",[t._v("String")]),t._v(", "),s("code",[t._v("Number")]),t._v(" 或者 "),s("code",[t._v("Environment Record")]),t._v("，如果 "),s("code",[t._v("base value")]),t._v(" 的值为 "),s("code",[t._v("undefined")]),t._v("，这个 "),s("code",[t._v("Reference")]),t._v(" 就不能被解析为一个属性绑定。")]),t._v(" "),s("h3",{attrs:{id:"referenced-name"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#referenced-name"}},[t._v("#")]),t._v(" referenced name")]),t._v(" "),s("p",[t._v("字符串，表示 "),s("code",[t._v("Reference")]),t._v(" 的名称。")]),t._v(" "),s("h3",{attrs:{id:"strict-reference"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#strict-reference"}},[t._v("#")]),t._v(" strict reference")]),t._v(" "),s("p",[t._v("这是一个与严格模式作用域有关的 component，在本文中没啥用。"),s("a",{attrs:{href:"https://stackoverflow.com/questions/11698901/whats-the-meaning-of-strict-reference-flag-in-ecma-5-262",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考来源 (stack overflow)"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"getbase"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getbase"}},[t._v("#")]),t._v(" GetBase")]),t._v(" "),s("p",[t._v("获取 "),s("code",[t._v("Reference")]),t._v(" 的 "),s("code",[t._v("base value")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"ispropertyreference"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ispropertyreference"}},[t._v("#")]),t._v(" IsPropertyReference")]),t._v(" "),s("p",[t._v("如果 "),s("code",[t._v("base value")]),t._v(" 是一个对象，它就会返回 "),s("code",[t._v("true")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"getvalue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getvalue"}},[t._v("#")]),t._v(" GetValue")]),t._v(" "),s("p",[t._v("返回对象属性保存的真实值。")]),t._v(" "),s("h3",{attrs:{id:"implicitthisvalue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#implicitthisvalue"}},[t._v("#")]),t._v(" ImplicitThisValue")]),t._v(" "),s("p",[t._v("这是 "),s("code",[t._v("Environment Record")]),t._v(" 的一个操作，一般情况下返回 "),s("code",[t._v("undefined")]),t._v("，理解这篇文章只需要当它始终返回 "),s("code",[t._v("undefined")]),t._v(" 即可。")]),t._v(" "),s("p",[t._v("详情可在文档中搜索 ImplicitThisValue，查看所有的规则，或者简单参考"),s("a",{attrs:{href:"https://stackoverflow.com/questions/29375931/why-is-type-of-calling-function-not-reference-in-javascriptecma-262-5-1",target:"_blank",rel:"noopener noreferrer"}},[t._v("这个回答 (stack overflow)"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"取值规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#取值规则"}},[t._v("#")]),t._v(" 取值规则")]),t._v(" "),s("p",[t._v("原文根据文档 11.2.3 Function Calls 章节的描述整理出了判断 "),s("code",[t._v("this")]),t._v(" 取值的规则：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" 计算 MemberExpression 的结果赋值给 ref\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" 判断 ref 是不是一个 Reference 类型\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.1")]),t._v(" 如果 ref 是 Reference，并且 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("IsPropertyReference")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ref"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 是 "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 那么 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" 的值为 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetBase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ref"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.2")]),t._v(" 如果 ref 是 Reference，并且 base value 值是 Environment Record"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 那么 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" 的值为 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ImplicitThisValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ref"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.3")]),t._v(" 如果 ref 不是 Reference，那么 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" 的值为 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n")])])]),s("h3",{attrs:{id:"_1-计算-memberexpression"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-计算-memberexpression"}},[t._v("#")]),t._v(" 1. 计算 MemberExpression...")]),t._v(" "),s("p",[t._v("这里的 "),s("code",[t._v("MemberExpression")]),t._v(" 可以理解为获取函数的表达式，而 "),s("code",[t._v("ref")]),t._v(" 则是这个表达式的计算结果。")]),t._v(" "),s("p",[t._v("再简单一些的理解，就是标识函数执行的括号对左边的代码，比如 "),s("code",[t._v("(false || foo.bar)()")]),t._v("，"),s("code",[t._v("MemberExpression")]),t._v(" 就是 "),s("code",[t._v("(false || foo.bar)")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"_2-判断-ref-是不是一个-reference"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-判断-ref-是不是一个-reference"}},[t._v("#")]),t._v(" 2. 判断 ref 是不是一个 Reference...")]),t._v(" "),s("p",[t._v("这个在原文里有提到，其实就是对照文档中对每种 "),s("code",[t._v("MemberExpression")]),t._v(" 的描述，看看返回的结果是不是一个 "),s("code",[t._v("Reference")]),t._v(" 类型。")]),t._v(" "),s("h3",{attrs:{id:"_2-1-如果-ref-是-reference，并且-is"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-如果-ref-是-reference，并且-is"}},[t._v("#")]),t._v(" 2.1 如果 ref 是 Reference，并且 Is...")]),t._v(" "),s("p",[t._v("如果 "),s("code",[t._v("ref")]),t._v(" 属于 "),s("code",[t._v("Reference")]),t._v(" 类型，且 "),s("code",[t._v("base value")]),t._v(" 是一个对象，那么 "),s("code",[t._v("this")]),t._v(" 的值就是 "),s("code",[t._v("base value")]),t._v(" 中的对象。")]),t._v(" "),s("p",[t._v("这种情况就是取对象中的属性，那么 "),s("code",[t._v("this")]),t._v(" 的指向就是这个对象，这也是使用 "),s("code",[t._v("this")]),t._v(" 最常见的一种情况。")]),t._v(" "),s("h3",{attrs:{id:"_2-2-如果-ref-是-reference，并且-ba"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-如果-ref-是-reference，并且-ba"}},[t._v("#")]),t._v(" 2.2 如果 ref 是 Reference，并且 ba...")]),t._v(" "),s("p",[t._v("如果 "),s("code",[t._v("ref")]),t._v(" 属于 "),s("code",[t._v("Reference")]),t._v(" 类型，且 "),s("code",[t._v("base value")]),t._v(" 是一个环境，那么 "),s("code",[t._v("this")]),t._v(" 的值就是 "),s("code",[t._v("undefined")]),t._v("，在严格模式下，"),s("code",[t._v("undefined")]),t._v(" 会被重写为全局变量。")]),t._v(" "),s("p",[t._v("这种情况就是声明全局变量，"),s("code",[t._v("this")]),t._v(" 会指向 "),s("code",[t._v("window")]),t._v("。全局变量与对象属性是分析 "),s("code",[t._v("this")]),t._v(" 的文章中最常见的栗子，文章一般会将这种情况解释为 "),s("code",[t._v("this")]),t._v(" 指向的是函数声明的位置，如果在对象中声明，那么 "),s("code",[t._v("this")]),t._v(" 就指向这个对象，如果在全局声明，那就指向全局变量。事实上这种说法是有缺陷的，它无法解释 2.3 中的行为。")]),t._v(" "),s("h3",{attrs:{id:"_2-3-如果-ref-不是-reference"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-如果-ref-不是-reference"}},[t._v("#")]),t._v(" 2.3 如果 ref 不是 Reference...")]),t._v(" "),s("p",[t._v("如果 "),s("code",[t._v("ref")]),t._v(" 不属于 "),s("code",[t._v("Reference")]),t._v(" 类型，那么 "),s("code",[t._v("this")]),t._v(" 的值就是 "),s("code",[t._v("undefined")]),t._v("，在严格模式下，"),s("code",[t._v("undefined")]),t._v(" 会被重写为全局变量。")]),t._v(" "),s("p",[t._v("这种情况对应了原文中的三个栗子 "),s("code",[t._v("(foo.bar = foo.bar)()")]),t._v(", "),s("code",[t._v("(false || foo.bar)()")]),t._v(", "),s("code",[t._v("(foo.bar, foo.bar)()")]),t._v("，由于获取函数的 "),s("code",[t._v("MemberExpression")]),t._v(" 不是简单的对象属性或者全局变量，因此完全无法用声明位置的说法来解释其 "),s("code",[t._v("this")]),t._v(" 指向，此时应该查阅文档，看看表达式最终返回的值是否 "),s("code",[t._v("Reference")]),t._v("，才能确定最终的 "),s("code",[t._v("this")]),t._v(" 指向。")]),t._v(" "),s("h2",{attrs:{id:"原文栗子解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原文栗子解析"}},[t._v("#")]),t._v(" 原文栗子解析")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" foo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("bar")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 示例 1")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 示例 2")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 示例 3")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bar "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 示例 4")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 示例 5")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"foo-bar"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#foo-bar"}},[t._v("#")]),t._v(" foo.bar()")]),t._v(" "),s("blockquote",[s("p",[t._v("11.2.1 Property Accessors"),s("br"),t._v("\nReturn a value of type Reference whose base value is baseValue and whose referenced name is propertyNameString, and whose strict mode flag is strict.")])]),t._v(" "),s("p",[t._v("根据描述得知返回的对象就是 "),s("code",[t._v("Reference")]),t._v("，而 "),s("code",[t._v("MemberExpression")]),t._v(" 是访问了一个对象的属性，因此符合 2.1 中的描述，"),s("code",[t._v("this")]),t._v(" 应该指向函数所在的对象 "),s("code",[t._v("foo")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"foo-bar-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#foo-bar-2"}},[t._v("#")]),t._v(" (foo.bar)()")]),t._v(" "),s("blockquote",[s("p",[t._v("11.1.6 The Grouping Operator"),s("br"),t._v("\nThe production PrimaryExpression : ( Expression ) is evaluated as follows:"),s("br"),t._v("\nReturn the result of evaluating Expression. This may be of type Reference."),s("br"),t._v("\nNOTE: This algorithm does not apply GetValue to the result of evaluating Expression. The principal motivation for this is so that operators such as delete and typeof may be applied to parenthesised expressions.")])]),t._v(" "),s("p",[t._v("根据描述，括号运算符不会对内部的的表达式产生影响，其存在的意义是为了处理像 "),s("code",[t._v("delete")]),t._v(" 和 "),s("code",[t._v("typeof")]),t._v(" 这样的表达式，因此这题与上一题答案一样，"),s("code",[t._v("this")]),t._v(" 指向 "),s("code",[t._v("foo")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"foo-bar-foo-bar"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#foo-bar-foo-bar"}},[t._v("#")]),t._v(" (foo.bar = foo.bar)()")]),t._v(" "),s("blockquote",[s("p",[t._v("11.13.1 Simple Assignment ( = )"),s("br"),t._v("\n3. Let rval be GetValue(rref)."),s("br"),t._v("\n5. Return rval.")])]),t._v(" "),s("p",[t._v("根据描述赋值符号返回的不是 "),s("code",[t._v("Reference")]),t._v("，而是对右边表达式 "),s("code",[t._v("GetValue()")]),t._v(" 的结果，因此符合 2.3 的描述，"),s("code",[t._v("this")]),t._v(" 为 "),s("code",[t._v("undefined")]),t._v("，在严格模式下，"),s("code",[t._v("undefined")]),t._v(" 会被重写为全局变量。")]),t._v(" "),s("h3",{attrs:{id:"false-foo-bar"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#false-foo-bar"}},[t._v("#")]),t._v(" (false || foo.bar)()")]),t._v(" "),s("blockquote",[s("p",[t._v("11.11 Binary Logical Operators"),s("br"),t._v("\nThe production LogicalORExpression : LogicalORExpression || LogicalANDExpression is evaluated as follows:"),s("br"),t._v("\n5. Return GetValue(rref).")])]),t._v(" "),s("p",[t._v("根据描述赋值符号返回的不是 "),s("code",[t._v("Reference")]),t._v("，而是对右边表达式 "),s("code",[t._v("GetValue()")]),t._v(" 的结果，因此与上题一样，"),s("code",[t._v("this")]),t._v(" 指向全局变量。")]),t._v(" "),s("h3",{attrs:{id:"foo-bar-foo-bar-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#foo-bar-foo-bar-2"}},[t._v("#")]),t._v(" (foo.bar, foo.bar)()")]),t._v(" "),s("blockquote",[s("p",[t._v("11.14 Comma Operator ( , )"),s("br"),t._v("\nThe production Expression : Expression , AssignmentExpression is evaluated as follows:\n4. Return GetValue(rref).")])]),t._v(" "),s("p",[t._v("根据描述赋值符号返回的不是 "),s("code",[t._v("Reference")]),t._v("，而是对右边表达式 "),s("code",[t._v("GetValue()")]),t._v(" 的结果，因此与上题一样，"),s("code",[t._v("this")]),t._v(" 指向全局变量。")]),t._v(" "),s("h3",{attrs:{id:"答案总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#答案总结"}},[t._v("#")]),t._v(" 答案总结")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" foo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("bar")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bar "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n")])])]),s("h3",{attrs:{id:"其他例子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他例子"}},[t._v("#")]),t._v(" 其他例子")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" foo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("bar")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 11.12 Conditional Operator ( ? : )")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The production ConditionalExpression : LogicalORExpression ? AssignmentExpression : AssignmentExpression is evaluated as follows:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. Let lref be the result of evaluating LogicalORExpression.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. If ToBoolean(GetValue(lref)) is true, then")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   a. Let trueRef be the result of evaluating the first AssignmentExpression.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   b. Return GetValue(trueRef).")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. Else")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   a. Let falseRef be the result of evaluating the second AssignmentExpression.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   b. Return GetValue(falseRef).")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n")])])]),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("总的来说，“"),s("code",[t._v("this")]),t._v(" 指向的是函数声明的位置”这种说法说对了大部分的情况，但在函数是通过表达式计算得来时，就无法解释了，因此使用 "),s("code",[t._v("Reference")]),t._v(" 模型来分析 "),s("code",[t._v("this")]),t._v(" 指向还是很有必要的。")])])}),[],!1,null,null,null);e.default=n.exports}}]);